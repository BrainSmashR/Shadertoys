


-- // ------------------------------------------------------------------- // --
-- //                                                                     // --
-- //        A T O M A G I C A L Y   G E N E R A T E D   F I L E          // --
-- //                  -   D O   N O T   E D I T   -                      // --
-- //       W I L L   B E   O V E R W R I T T E N   W I T H O U T         // --
-- //              A N Y   F U R T H E R   W A R N I N G                  // --
-- //                                                                     // --
-- // ------------------------------------------------------------------- // --




local ST_ID               = 'llXyzN'
local ST_NAME             = 'RLStyle Visualizer'
local ST_AUTHOR           = 'clintolibre'
local FUSE_NAME           = 'Rlstyle'
local FUSE_PATH           = 'Shadertoys_beta/'
local FUSE_FILENAME       = 'Rlstyle.fuse'
local FUSE_COPYRIGHT      = ''
local FUSE_AUTHOR         = 'JiPi'
local FUSE_AUTHORURL      = 'https://www.youtube.com/c/JiPi_YT'
local FUSE_VERSION        = 'v1'
local FUSE_THUMB          = ''
local FUSE_AUTHORIMG= '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'
local FUSE_AUTHORIMGSIZE = {47,24}


local g_geometry        = {100, 100, 1024, 270}
local g_ui              = fu.UIManager
local g_uidispatcher    = bmd.UIDispatcher(g_ui)

local g_installWindow = nil;
local g_endScreen     = nil;
local g_fileExists    = false;


local b='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
function dec(data)
    data = string.gsub(data, '[^'..b..'=]', '')
    return (data:gsub('.', function(x)
        if (x == '=') then return '' end
        local r,f='',(b:find(x)-1)
        for i=6,1,-1 do r=r..(f%2^i-f%2^(i-1)>0 and '1' or '0') end
        return r;
    end):gsub('%d%d%d?%d?%d?%d?%d?%d?', function(x)
        if (#x ~= 8) then return '' end
        local c=0
        for i=1,8 do c=c+(x:sub(i,i)=='1' and 2^(8-i) or 0) end
        return string.char(c)
    end))
end




function createInstallWindow()

  local text=''
  if FUSE_AUTHORIMG~='' then
    text ='<img src="data:image/png;base64,'..FUSE_AUTHORIMG..'" />'
  end


  g_installWindow = g_uidispatcher:AddWindow({
    ID = 'InstallWindow',
    WindowTitle = FUSE_NAME..' Installer',
    Geometry    = g_geometry,
    Spacing     = 10,

    g_ui:VGroup {

      ID = 'root',

      g_ui:HGroup {
        g_ui:Label{
          ID = "", WordWrap = false, Weight = 0,
          MinimumSize = {320, 180}, ReadOnly = true, Flat = true,
          Alignment = { AlignHCenter = false, AlignTop = true, },
          Text = '<img src="data:image/png;base64,'.. FUSE_THUMB .. '" />',
        },

        g_ui:HGap(20),
        -- ui:HGap(1.0,0.1),

        g_ui:Label{
          Weight = 2.0,
          ID = 'TextLabel',
          Text = ''
            ..'<h2 style="color:#efbd78; ">Welcome to the '..FUSE_NAME..' Setup</h2>'
            ..'<p style="font-size:large; color:#ffffff; ">'
            ..'<a href="https://www.shadertoy.com/view/'..ST_ID..'" style="color:rgb(139,155,216); text-decoration:none; ">'..ST_NAME..'</a> created by '
            ..'<a href="https://www.shadertoy.com/user/'..ST_AUTHOR..'" style="color:rgb(139,155,216); text-decoration:none; ">'..ST_AUTHOR..'</a> '
            ..'and ported by <a href="'..FUSE_AUTHORURL..'" style="color:rgb(139,155,216); text-decoration:none; ">'..FUSE_AUTHOR..'</a><br />'
            ..'<span style="color:gray; font-size:small; ">'..FUSE_COPYRIGHT..'&nbsp;</span>'
            ..'</p>'
            ..'<p>'
            ..'  This script will install \''..FUSE_FILENAME..'\' '..FUSE_VERSION..' on your computer.<br />'
            ..'  THIS IS AT YOUR OWN RISK AND WITHOUT WARRANTY OF ANY KIND!<br />'
            ..'  Click \'Install\' to continue or \'Cancel\' to exit the setup.'
            ..'</p>'
            ..'<p style="color:#ffffff; ">'
            ..'  Visit us on <a href="https://github.com/nmbr73/Shadertoys" style="color: rgb(139,155,216); text-decoration:none; ">GitHub</a> for more cute little ShaderFuses!'
            ..'</p>'
            ..(g_fileExists and '<p align="center"><span style="color:#ffffff; background-color:#ff0000; ">&nbsp;ATTENTION! '..FUSE_FILENAME..' does already exist and will be overwritten!&nbsp;</span></p>' or ''),
          Alignment = { AlignHCenter = false, AlignVCenter = false, },
          WordWrap = true,
          OpenExternalLinks = true,
        },
      },

      g_ui:Label{
        Weight = 0,
        ID = 'hr',
        Text='<hr />',
      },

      g_ui:HGroup{

        g_ui:HGap(5),
        g_ui:Label{
          ID = "", WordWrap = false, Weight = 0,
          MinimumSize = FUSE_AUTHORIMGSIZE,
          ReadOnly = true, Flat = true,
          Alignment = { AlignHCenter = false, AlignTop = true, },
          Text = text,
        },


        Weight = 0,
        g_ui:HGap(0, 2.0),
        g_ui:Button{  ID = "Install", Text = "Install",    },
        g_ui:Button{  ID = "Cancel",  Text = "Cancel",  },
      },
    },
  })

  function g_installWindow.On.InstallWindow.Close(ev)
      g_uidispatcher:ExitLoop()
  end

  function g_installWindow.On.Install.Clicked(ev)
    g_installWindow:Hide()
    install()
  end

  function g_installWindow.On.Cancel.Clicked(ev)
    g_uidispatcher:ExitLoop()
  end
end


function createEndScreen()

  local text=''
  if g_fileExists then
    text='<p>As you already had this Fuse installed, you may not need to restart the application. But chances are, that you have just overwritten the same version and will not find anything new. '
  else
    text='<p>In order to use the newly installed Plug-in you will need to restart DaVinci Resolve / Fusion. '
  end

  text = text .. 'However, go into Fusion, smash the \'Shift+Space\' shortcut and search for "'..FUSE_NAME..'" to add this type of node - and then ...</p><p style="color:#ffffff; ">Have Fun!'

  if FUSE_AUTHORIMG~='' then
    text=text..'<br /><img src="data:image/png;base64,'..FUSE_AUTHORIMG..'" /></p>'
  else
    text=text..'</p>'
  end


  g_endScreen = g_uidispatcher:AddWindow({
    ID = 'EndScreen',
    WindowTitle = FUSE_NAME..' Installed',
    Geometry = {300, 100, 640, 270},

    g_ui:VGroup{
      ID = 'root',

      g_ui:Label{
          Weight = 1.0, ID = 'FinalTextLabel',
          Text ='<h2>Installation of <span style="color:#ffffff; ">'..FUSE_NAME..'</span> (hopefully) completed</h2><p>'..text..'</p>',
          Alignment = { AlignHCenter = true, AlignVTop = true, },
          WordWrap = true,
      },

      g_ui:HGroup{
        Weight = 0,
        g_ui:HGap(0, 2.0),
        g_ui:Button{ Weight = 0.1, ID = "Okay", Text = "Okay", },
        g_ui:HGap(0, 2.0),
      },
    },
  })

  function g_endScreen.On.EndScreen.Close(ev)
      g_uidispatcher:ExitLoop()
  end

  function g_endScreen.On.Okay.Clicked(ev)
      g_uidispatcher:ExitLoop()
  end

end


function fileExists(path, file)

  assert(path~=nil and path~='')
  assert(file~=nil and file~='')

	local h = bmd.readdir(path..file)

	for k, v in pairs(h) do
    if v.Name~=nil and v.Name==file then
      return true;
    end
	end

	return false;
end



function install()

  bmd.createdir(fusion:MapPath('Fuses:/'..FUSE_PATH));

  local f = io.open(fusion:MapPath('Fuses:/'..FUSE_PATH..FUSE_FILENAME),"wb")
  writeFuseCode(f);
  f:close()
  g_endScreen:Show()
end



function goForIt()

  g_fileExists    =  fileExists(fusion:MapPath('Fuses:/'..FUSE_PATH), FUSE_FILENAME)

  createInstallWindow()
  createEndScreen()

  g_installWindow:Show()
  g_uidispatcher:RunLoop()
  g_endScreen:Hide()
end
function writeFuseCode(f)
  f:write(dec(""))
end
goForIt()
